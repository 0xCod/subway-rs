use ethers::prelude::*;
use ethers_flashbots::BundleTransaction;
use hex::FromHex;
use std::str::FromStr;

use subway_rs::relayer;

#[test]
fn test_construct_bundle_raw_transactions() {
    // Example Signed Raw Transaction
    let raw_data: String = "0x02f90312010b845b31f28085037e11d60083061a809400000000009726632680fb29d3f7a9734e3010e280b902a4b0480bbd0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000001111111254fb6c44bac0bed2854e76f90643097d00000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000007efc27e09bddb994000000000000000000000000000000000000000000000000011451bf389ef0cf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062d9afa80000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001be231a5933e022bd0ce375c26e46cb23cb39b387c9c38d904d3fca0082974582e3ece4f17c1ac8bffe8a1a8a22bbf34c35d626acd545199e8ac01793981f89fab00000000000000000000000000000000000000000000000000000000000000c82e95b6c80000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000000000000000000000000000007de7d621633ec8c5000000000000000000000000000000000000000000000000000000000088b4b40000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000100000000000000003b6d0340ae461ca67b15dc8dc81ce7615e0320da1a9ab8d5520b7e0f000000000000000000000000000000000000000000000000c080a05fafb325d3aab047a5ff37be215329b967c9f7e09df44583e10d5c9667e76163a07c76bd102451ba27ef1d161b243a9c8f4b1ee88707202038a650aceae0809cc2".to_string();
    let prefix_stripped = raw_data.strip_prefix("0x").unwrap_or(raw_data.as_str());
    let raw_bytes = Bytes::from(Vec::from_hex(prefix_stripped).unwrap_or_default());
    let signed_transactions = vec![raw_bytes.clone()];

    // Construct the bundle
    let constructed = relayer::construct_bundle(&signed_transactions, U64::from(1)).unwrap();
    assert_eq!(constructed.block(), Some(U64::from(2)));
    assert_eq!(constructed.simulation_block(), Some(U64::from(1)));
    assert_eq!(constructed.simulation_basefee(), None);
    assert_eq!(
        constructed.transaction_hashes(),
        vec![
            H256::from_str("0x7ec8a7ab42c06e02b6f9a9beffa048bf2139f9e21a9342cf10d7b1de6301b1fc")
                .unwrap()
        ]
    );
    match &constructed.transactions()[0] {
        BundleTransaction::Raw(b) => assert_eq!(*b, raw_bytes),
        BundleTransaction::Signed(tx) => panic!("Did not expected signed tx: {:?}", tx),
    }
}

// TODO: Construct bundle with signed transactions
